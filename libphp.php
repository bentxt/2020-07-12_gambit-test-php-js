<?php
// File generated by Gambit v4.9.3
// Link info: (409003 (php ()) "libphp" (("libphp")) (null_obj vector make_interned_symbol module_register peps ffi pair r2 glo-println glo poll pollcount string r1 r0 sp stack wrong_nargs nargs) (println alert current-milliseconds hostlist app# append for-each basename) (println alert current-milliseconds hostlist libphp# append for-each basename) (println alert current-milliseconds hostlist append for-each basename) #f)

$g_cst0_G_libphp = (new G_ScmString(array(62,62,62,32,120,120,120,108,105,98,112,104,112,46,115,99,109)));

function g_bb1_libphp_23_() {static $id = 0, $parent = NULL, $nfree = -1, $name = "libphp#", $ctrlpts = array("g_bb1_libphp_23_","g_bb2_libphp_23_","g_bb3_libphp_23_","g_bb4_libphp_23_"), $info = false;  // entry-point
  global $g_nargs, $g_stack, $g_sp, $g_r0, $g_r1, $g_cst0_G_libphp, $g_pollcount, $g_glo;
  if ($g_nargs != 0) {
    return g_wrong_nargs("g_bb1_libphp_23_");
  }
  $g_stack[$g_sp+1] = $g_r0;
  $g_r1 = $g_cst0_G_libphp;
  ++$g_sp;
  if (--$g_pollcount == 0) {
    return g_poll("g_bb2_libphp_23_");
  } else {
    $g_r0 = "g_bb3_libphp_23_";
    $g_nargs = 1;
    return $g_glo["println"];
  }
}

function g_bb2_libphp_23_() {static $id = 1, $parent = "g_bb1_libphp_23_"; 
  global $g_r0, $g_nargs, $g_glo;
  $g_r0 = "g_bb3_libphp_23_";
  $g_nargs = 1;
  return $g_glo["println"];
}

function g_bb3_libphp_23_() {static $id = 2, $parent = "g_bb1_libphp_23_", $fs = 1, $link = 1;  // return-point
  global $g_glo, $g_r0, $g_stack, $g_sp, $g_pollcount, $g_nargs;
  $g_glo["for-each"] = "g_bb1_for_2d_each";
  $g_glo["append"] = "g_bb1_append";
  $g_glo["hostlist"] = "g_bb1_hostlist";
  $g_glo["current-milliseconds"] = "g_bb1_current_2d_milliseconds";
  $g_glo["alert"] = "g_bb1_alert";
  $g_glo["basename"] = "g_bb1_basename";
  $g_r0 = $g_stack[$g_sp];
  if (--$g_pollcount == 0) {
    return g_poll("g_bb4_libphp_23_");
  } else {
    $g_nargs = 0;
    --$g_sp;
    return $g_glo["app#"];
  }
}

function g_bb4_libphp_23_() {static $id = 3, $parent = "g_bb1_libphp_23_"; 
  global $g_nargs, $g_sp, $g_glo;
  $g_nargs = 0;
  --$g_sp;
  return $g_glo["app#"];
}



$g_peps["libphp#"] = "g_bb1_libphp_23_";
$g_glo["libphp#"] = "g_bb1_libphp_23_";

function g_bb1_for_2d_each() {static $id = 0, $parent = NULL, $nfree = -1, $name = "for-each", $ctrlpts = array("g_bb1_for_2d_each","g_bb2_for_2d_each","g_bb3_for_2d_each","g_bb4_for_2d_each","g_bb6_for_2d_each","g_bb5_for_2d_each"), $info = false;  // entry-point
  global $g_nargs, $g_r2, $g_stack, $g_sp, $g_r0, $g_r1, $g_pollcount;
  if ($g_nargs != 2) {
    return g_wrong_nargs("g_bb1_for_2d_each");
  }
  if ($g_r2 instanceof G_Pair) {
    $g_stack[$g_sp+1] = $g_r0;
    $g_stack[$g_sp+2] = $g_r1;
    $g_stack[$g_sp+3] = $g_r2;
    $g_r1 = $g_r2->car;
    $g_sp += 3;
    if (--$g_pollcount == 0) {
      return g_poll("g_bb3_for_2d_each");
    } else {
      $g_r0 = "g_bb4_for_2d_each";
      $g_nargs = 1;
      return $g_stack[$g_sp-1];
    }
  } else {
    $g_r1 = NULL;
    return $g_r0;
  }
}

function g_bb2_for_2d_each() {static $id = 1, $parent = "g_bb1_for_2d_each"; 
  global $g_stack, $g_sp, $g_r0, $g_r1, $g_r2, $g_pollcount, $g_nargs;
  $g_stack[$g_sp+1] = $g_r0;
  $g_stack[$g_sp+2] = $g_r1;
  $g_stack[$g_sp+3] = $g_r2;
  $g_r1 = $g_r2->car;
  $g_sp += 3;
  if (--$g_pollcount == 0) {
    return g_poll("g_bb3_for_2d_each");
  } else {
    $g_r0 = "g_bb4_for_2d_each";
    $g_nargs = 1;
    return $g_stack[$g_sp-1];
  }
}

function g_bb3_for_2d_each() {static $id = 2, $parent = "g_bb1_for_2d_each"; 
  global $g_r0, $g_nargs, $g_stack, $g_sp;
  $g_r0 = "g_bb4_for_2d_each";
  $g_nargs = 1;
  return $g_stack[$g_sp-1];
}

function g_bb4_for_2d_each() {static $id = 3, $parent = "g_bb1_for_2d_each", $fs = 3, $link = 1;  // return-point
  global $g_stack, $g_sp, $g_r2, $g_r1, $g_r0, $g_pollcount, $g_nargs, $g_glo;
  $g_r2 = $g_stack[$g_sp]->cdr;
  $g_r1 = $g_stack[$g_sp-1];
  $g_r0 = $g_stack[$g_sp-2];
  if (--$g_pollcount == 0) {
    return g_poll("g_bb5_for_2d_each");
  } else {
    $g_nargs = 2;
    $g_sp -= 3;
    return $g_glo["for-each"];
  }
}

function g_bb6_for_2d_each() {static $id = 4, $parent = "g_bb1_for_2d_each"; 
  global $g_r1, $g_r0;
  $g_r1 = NULL;
  return $g_r0;
}

function g_bb5_for_2d_each() {static $id = 5, $parent = "g_bb1_for_2d_each"; 
  global $g_nargs, $g_sp, $g_glo;
  $g_nargs = 2;
  $g_sp -= 3;
  return $g_glo["for-each"];
}



$g_peps["for-each"] = "g_bb1_for_2d_each";

function g_bb1_append() {static $id = 0, $parent = NULL, $nfree = -1, $name = "append", $ctrlpts = array("g_bb1_append","g_bb2_append","g_bb3_append","g_bb4_append","g_bb5_append"), $info = false;  // entry-point
  global $g_nargs, $g_r1, $g_stack, $g_sp, $g_r0, $g_pollcount, $g_glo, $g_r2;
  if ($g_nargs != 2) {
    return g_wrong_nargs("g_bb1_append");
  }
  if ($g_r1 instanceof G_Pair) {
    $g_stack[$g_sp+1] = $g_r0;
    $g_stack[$g_sp+2] = $g_r1;
    $g_r1 = $g_r1->cdr;
    $g_sp += 2;
    if (--$g_pollcount == 0) {
      return g_poll("g_bb3_append");
    } else {
      $g_r0 = "g_bb4_append";
      $g_nargs = 2;
      return $g_glo["append"];
    }
  } else {
    $g_r1 = $g_r2;
    return $g_r0;
  }
}

function g_bb2_append() {static $id = 1, $parent = "g_bb1_append"; 
  global $g_stack, $g_sp, $g_r0, $g_r1, $g_pollcount, $g_nargs, $g_glo;
  $g_stack[$g_sp+1] = $g_r0;
  $g_stack[$g_sp+2] = $g_r1;
  $g_r1 = $g_r1->cdr;
  $g_sp += 2;
  if (--$g_pollcount == 0) {
    return g_poll("g_bb3_append");
  } else {
    $g_r0 = "g_bb4_append";
    $g_nargs = 2;
    return $g_glo["append"];
  }
}

function g_bb3_append() {static $id = 2, $parent = "g_bb1_append"; 
  global $g_r0, $g_nargs, $g_glo;
  $g_r0 = "g_bb4_append";
  $g_nargs = 2;
  return $g_glo["append"];
}

function g_bb4_append() {static $id = 3, $parent = "g_bb1_append", $fs = 2, $link = 1;  // return-point
  global $g_stack, $g_sp, $g_r2, $g_r1;
  $g_r2 = $g_stack[$g_sp]->car;
  $g_r1 = (new G_Pair($g_r2,$g_r1));
  $g_sp -= 2;
  return $g_stack[$g_sp+1];
}

function g_bb5_append() {static $id = 4, $parent = "g_bb1_append"; 
  global $g_r1, $g_r2, $g_r0;
  $g_r1 = $g_r2;
  return $g_r0;
}



$g_peps["append"] = "g_bb1_append";

function g_bb1_hostlist() {static $id = 0, $parent = NULL, $nfree = -1, $name = "hostlist", $ctrlpts = array("g_bb1_hostlist"), $info = false;  // entry-point
  global $g_nargs, $g_r1, $g_r0;
  if ($g_nargs != 0) {
    return g_wrong_nargs("g_bb1_hostlist");
  }
  $g_r1 = g_host2scm(array(88,222, 2222));
  return $g_r0;
}



$g_peps["hostlist"] = "g_bb1_hostlist";

function g_bb1_current_2d_milliseconds() {static $id = 0, $parent = NULL, $nfree = -1, $name = "current-milliseconds", $ctrlpts = array("g_bb1_current_2d_milliseconds"), $info = false;  // entry-point
  global $g_nargs, $g_r1, $g_r0;
  if ($g_nargs != 0) {
    return g_wrong_nargs("g_bb1_current_2d_milliseconds");
  }
  $g_r1 = Date.now();
  return $g_r0;
}



$g_peps["current-milliseconds"] = "g_bb1_current_2d_milliseconds";

function g_bb1_alert() {static $id = 0, $parent = NULL, $nfree = -1, $name = "alert", $ctrlpts = array("g_bb1_alert"), $info = false;  // entry-point
  global $g_nargs, $g_r1, $g_r0;
  if ($g_nargs != 1) {
    return g_wrong_nargs("g_bb1_alert");
  }
  echo(g_scm2host($g_r1));
  $g_r1 = NULL;
  return $g_r0;
}



$g_peps["alert"] = "g_bb1_alert";

function g_bb1_basename() {static $id = 0, $parent = NULL, $nfree = -1, $name = "basename", $ctrlpts = array("g_bb1_basename"), $info = false;  // entry-point
  global $g_nargs, $g_r1, $g_r0;
  if ($g_nargs != 1) {
    return g_wrong_nargs("g_bb1_basename");
  }
  basename(g_scm2host($g_r1));
  $g_r1 = NULL;
  return $g_r0;
}



$g_peps["basename"] = "g_bb1_basename";

g_module_register((new G_Vector(array((new G_Vector(array(g_make_interned_symbol("libphp")))),(new G_Vector(array())),$g_null_obj,1,"g_bb1_libphp_23_",false))));

?>